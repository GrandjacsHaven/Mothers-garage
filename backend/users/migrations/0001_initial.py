# Generated by Django 5.1.3 on 2025-04-15 23:33

import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_email_verified', models.BooleanField(default=False)),
                ('phone_number', models.CharField(blank=True, max_length=30, null=True)),
                ('role', models.CharField(blank=True, choices=[('mother', 'Mother'), ('provider', 'Service Provider'), ('admin', 'Admin'), ('super_admin', 'Super Admin')], max_length=20, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MotherProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age', models.CharField(blank=True, max_length=10, null=True)),
                ('weight', models.CharField(blank=True, max_length=10, null=True)),
                ('height', models.CharField(blank=True, max_length=10, null=True)),
                ('country', models.CharField(choices=[('Uganda', 'Uganda'), ('Canada', 'Canada')], default='Uganda', max_length=100)),
                ('preferred_language', models.CharField(blank=True, choices=[('English', 'English'), ('French', 'French')], default='English', max_length=50, null=True)),
                ('pinned_location', django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True, srid=4326)),
                ('postpartum_needs', models.TextField(blank=True, null=True)),
                ('infant_care_preferences', models.TextField(blank=True, null=True)),
                ('has_agreed_to_terms', models.BooleanField(default=False)),
                ('payment_method', models.CharField(blank=True, max_length=50, null=True)),
                ('has_completed_tutorial', models.BooleanField(default=False)),
                ('interests', models.ManyToManyField(blank=True, to='users.interest')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mother_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Speciality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('service_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specialities', to='users.servicetype')),
            ],
            options={
                'unique_together': {('name', 'service_type')},
            },
        ),
        migrations.CreateModel(
            name='ProviderProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pinned_location', django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True, srid=4326)),
                ('bio', models.TextField(blank=True, null=True)),
                ('license_number', models.CharField(blank=True, max_length=100, null=True)),
                ('credentials', models.TextField(blank=True, null=True)),
                ('associated_clinic', models.CharField(blank=True, max_length=100, null=True)),
                ('is_verified_by_admin', models.BooleanField(default=False)),
                ('subscription_plan', models.CharField(blank=True, choices=[('basic', 'Basic'), ('standard', 'Standard'), ('premium', 'Premium')], max_length=10, null=True)),
                ('subscription_start', models.DateTimeField(blank=True, null=True)),
                ('subscription_end', models.DateTimeField(blank=True, null=True)),
                ('certificates', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), blank=True, default=list, null=True, size=None)),
                ('is_searchable', models.BooleanField(default=True)),
                ('country', models.CharField(choices=[('Uganda', 'Uganda'), ('Canada', 'Canada')], default='Uganda', max_length=100)),
                ('preferred_language', models.CharField(blank=True, choices=[('English', 'English'), ('French', 'French')], default='English', max_length=50, null=True)),
                ('has_completed_tutorial', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='provider_profile', to=settings.AUTH_USER_MODEL)),
                ('service_types', models.ManyToManyField(blank=True, to='users.servicetype')),
                ('specialities', models.ManyToManyField(blank=True, to='users.speciality')),
            ],
        ),
    ]
